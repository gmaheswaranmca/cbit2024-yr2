-- /src/notes/ListNotes.jsx                 "/notes/list"
import { useEffect, useState } from "react";
import LoggedInHeader from "../header/LoggedInHeader";
import backendService from "../services/BackendService";
export default function ListNotes() {
    const [notesList, setNotesList] = useState([
      /*  {id:10,title:'HTML 5',notes:'HTML 5 is a web language'},
        {id:20,title:'React JS',notes:'React JS is a frontend UI framework'}
      */
    ])
    const doReadAll = async ()=>{
        const response = await backendService.readAll();
        const queriedNotes = response.data;
        setNotesList(queriedNotes);
    }
    useEffect(()=>{doReadAll();},[])
    const doDelete = async (id) => {
      if(!confirm('Are your sure to delete?')) return;
      const response = await backendService.delete(id)
      alert('Deleted successfully')
      await doReadAll()
    }
    return(<><LoggedInHeader activeMenuPath={'/notes/list'}/>
    <h3>List of Notes</h3>
      <div className="container">
      <table className="table table-light border-success table-hover">
          <thead>
              <tr> <th>#</th> <th>title</th> <th></th> </tr>
          </thead>
          <tbody>
          {notesList.map((note, index) => (<tr key={index}> <td>{index+1}</td> <td>{note.title}</td> 
              <td align="right">
                <a href={"/notes/view/" + note.id} className="btn btn-success">View</a>
                <a href={"/notes/edit/" + note.id} className="btn btn-warning">Edit</a>
                <button type="button" className="btn btn-danger" onClick={()=>doDelete(note.id)}>Delete</button>
              </td> 
            </tr>)  )}          
          </tbody>
      </table>
    </div>
    </>)
}
-- /src/notes/SearchNotes.jsx               "/"
import {  useState } from "react";
import LoggedInHeader from "../header/LoggedInHeader";
import backendService from "../services/BackendService";

export default function SearchNotes() {
    const [formNote, setFormNote] = useState({title:'', notes_text:''});
    const [notesList, setNotesList] = useState([
      /*  {id:10,title:'HTML 5',notes:'HTML 5 is a web language'},
        {id:20,title:'React JS',notes:'React JS is a frontend UI framework'}
      */
    ])    
    const onBoxChange = (event) => {
        const newNote = {...formNote};
        newNote[event.target.id] = event.target.value;
        setFormNote(newNote);
    }
    const onSearch = async () => {
      const searchNote = {title:formNote.title, notes_text:formNote.notes_text}
      const response = await backendService.search(searchNote);
      const queriedNotes = response.data;
      setNotesList(queriedNotes)
    }
    
    return(<><LoggedInHeader activeMenuPath={'/'}/>
     <h3>Search Notes</h3> <div className="container">
        <div className="form-group m-2">
            <label htmlFor="title" className="form-label">Title</label>
            <input type="text" id="title" className="form-control"
              placeholder="Search by title..."
              value={formNote.title} onChange={onBoxChange}/>
        </div>
        <div className="form-group m-2">
          <label htmlFor="notes_text" className="form-label">Notes Text</label>
          <input type="text" id="notes_text" className="form-control"
              placeholder="Search by notes text..."
              value={formNote.notes_text} onChange={onBoxChange}/>
        </div>
        <button type="button" className="btn btn-success"
          onClick={onSearch}>Search</button>
        <table className="table table-light border-success table-hover">
          <thead>
              <tr> <th>#</th> <th>title</th> <th></th> </tr>
          </thead>
          <tbody>
          {notesList.map((note, index) => (<tr key={index}> <td>{index+1}</td> <td>{note.title}</td> 
              <td align="right">
                <a href={"/notes/view/" + note.id} className="btn btn-success">View</a>
                <a href={"/notes/edit/" + note.id} className="btn btn-warning">Edit</a>
                <button type="button" className="btn btn-danger">Delete</button>
              </td> 
            </tr>)  )}          
          </tbody>
      </table>
      </div>
    </>)
}   
-- /src/notes/CreateNote.jsx                "/notes/create"
import { useState } from "react";
import LoggedInHeader from "../header/LoggedInHeader";
import backendService from "../services/BackendService";
import { useNavigate } from "react-router-dom";
export default function CreateNote() {
    const [formNote, setFormNote] = useState({title:'', notes:''});
    const navigate = useNavigate();
    const onBoxChange = (event) => {
        const newNote = {...formNote};
        newNote[event.target.id] = event.target.value;
        setFormNote(newNote);
    }
    const onCreate = async () => {
        const newNote = {title: formNote.title, notes: formNote.notes};
        const response = await backendService.create(newNote);
        const createdNote = response.data; console.log(createdNote);
        alert('Note successfully created')
        navigate('/notes/list')
    }
    return(<><LoggedInHeader activeMenuPath={'/notes/create'}/>
     <h3>New Notes</h3>
      <div className="container">
        <div className="form-group m-2">
            <label htmlFor="title" className="form-label">Title</label>
            <input type="text" id="title" className="form-control"
              placeholder="Type here the title..." value={formNote.title} onChange={onBoxChange}/>
        </div>
        <div className="form-group m-2">
          <label htmlFor="notes" className="form-label">Notes</label>
          <textarea id="notes" className="form-control"
              placeholder="Type here the notes..."  value={formNote.notes} onChange={onBoxChange}></textarea>
        </div>
        <button type="button" className="btn btn-success"
          onClick={onCreate}>Create</button>
      </div>
    </>)
}
-- /src/notes/ViewNote.jsx                  "/notes/view/:id"
import { useEffect, useState } from "react";
import LoggedInHeader from "../header/LoggedInHeader";
import { useParams } from "react-router-dom";
import backendService from "../services/BackendService";
export default function ViewNote() {
    const [formNote, setFormNote] = useState({title:'', notes:''});
    const params = useParams();
    const onBoxChange = (event) => {
        const newNote = {...formNote};
        newNote[event.target.id] = event.target.value;
        setFormNote(newNote);
    }
    const doReadById = async () => {
      const response = await backendService.readById(params.id);
      const queriedNote = response.data;
      setFormNote(queriedNote);
    }
    useEffect(()=>{doReadById();},[])
    return(<><LoggedInHeader activeMenuPath={'/notes/list'}/>
     <h3> <a href="/notes/list" className="btn btn-light">Go Back</a> View Notes</h3>
      
      <div className="container">
        <div className="form-group m-2">
            <label htmlhtmlFor="title" className="form-label">Title</label>
            <input type="text" id="title" className="form-control"
              placeholder="Type here the title..." readonly="true"
              value={formNote.title} onChange={onBoxChange}/>
        </div>
        <div className="form-group m-2">
          <label htmlhtmlFor="notes" className="form-label">Notes</label>
          <textarea  id="notes" className="form-control"
              placeholder="Type here the notes..." readonly="true"
               onChange={onBoxChange} value={formNote.notes}></textarea>
        </div>
        
      </div>
    </>)
}
-- /src/notes/EditNote.jsx                  "/notes/edit/:id"
import { useEffect, useState } from "react";
import LoggedInHeader from "../header/LoggedInHeader";
import { useNavigate, useParams } from "react-router-dom";
import backendService from "../services/BackendService";
export default function EditNote() {
    const [formNote, setFormNote] = useState({title:'', notes:''});
    const params = useParams();
    const navigate = useNavigate();
    const onBoxChange = (event) => {
        const newNote = {...formNote};
        newNote[event.target.id] = event.target.value;
        setFormNote(newNote);
    }
    const doReadById = async () => {
      const response = await backendService.readById(params.id);
      const queriedNote = response.data;
      setFormNote(queriedNote);
    }
    useEffect(()=>{doReadById();},[])
    const onUpdate = async() => {
        const modifiedNote = {title:formNote.title, notes: formNote.notes};
        const response = await backendService.update(params.id, modifiedNote);
        const updatedNote = response.data;  console.log(updatedNote);
        alert('Note updated successfully')
        navigate('/notes/list')
    }
    return(<><LoggedInHeader activeMenuPath={'/notes/list'}/>
    <h3><a href="/notes/list" className="btn btn-light">Go Back</a>Edit Notes</h3>
      <div className="container">
        <div className="form-group m-2">
            <label htmlFor="title" className="form-label">Title</label>
            <input type="text" id="title" className="form-control"
              placeholder="Type here the title..."
              value={formNote.title} onChange={onBoxChange}/>
        </div>
        <div className="form-group m-2">
          <label htmlFor="notes" className="form-label">Notes</label>
          <textarea  id="notes" className="form-control"
              placeholder="Type here the notes..."
              value={formNote.notes} onChange={onBoxChange}></textarea>
        </div>
        <button type="button" 
          onClick={onUpdate}
        className="btn btn-danger">Update</button>
      </div>
    </>)
}
-- /src/services/BackendService.js 
import axios from 'axios';
function getApiCaller() {
    const config = {
        baseURL: 'https://cofhzz-5000.ocws.app',
        headers: { 'Content-type' : 'application/json'}
    };
    const apiCaller = axios.create(config);
    return apiCaller;
}
class BackendService { //notes resource
    readAll(){
        const apiCaller = getApiCaller();
        return apiCaller.get(`/notes`);//promise object requires then/catch or async/await
    }
    readById(id){
        const apiCaller = getApiCaller();
        return apiCaller.get(`/notes/${id}`);

    }
    search(searchNote) {
        const apiCaller = getApiCaller();
        return apiCaller.post(`/notes_search`,searchNote);
    }
    create(newNote) {
        const apiCaller = getApiCaller();
        return apiCaller.post(`/notes`,newNote);
    }
    update(id,modifiedNote) {
        const apiCaller = getApiCaller();
        return apiCaller.put(`/notes/${id}`,modifiedNote);
    }
    delete(id) {
        const apiCaller = getApiCaller();
        return apiCaller.delete(`/notes/${id}`);
    }
}
const backendService = new BackendService();
export default backendService;